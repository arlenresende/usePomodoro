import type { Metadata } from 'next'
import SidebarDashboard from './components/sidebar'
import HeaderDashboard from './components/header-dashboard'
import { ModalTaskContextProvider } from '../context/modalTaskContext'
import { unstable_noStore as noStore } from 'next/cache'
import { getKindeServerSession } from '@kinde-oss/kinde-auth-nextjs/server'
import { redirect } from 'next/navigation'
import prisma from '@/lib/db'
import { stripe } from '@/lib/stripe'

export const metadata: Metadata = {
  title: 'Use Pomodoro - Dashboard',
  description: 'Generated by create next app',
}

interface getDataUserProps {
  email: string
  id: string
  firstName: string | undefined | null
  lastName: string | undefined | null
  profileImage: string | undefined | null
}
async function getDataUser({
  email,
  id,
  firstName,
  lastName,
}: getDataUserProps) {
  noStore()
  const user = await prisma.user.findUnique({
    where: {
      id,
    },
    select: {
      id: true,
      stripeCustomerId: true,
    },
  })
  if (!user) {
    const name = `${firstName ?? ''} ${lastName ?? ''}`
    await prisma.user.create({
      data: {
        id,
        email,
        name,
        timePomorodo: 25,
        pausePomodoro: 5,
        urlVideo: 'https://www.youtube.com/watch?v=9hYqOQpYq6w',
      },
    })
  }

  if (!user?.stripeCustomerId) {
    const data = await stripe.customers.create({
      email,
    })
    await prisma.user.update({
      where: {
        id,
      },
      data: {
        stripeCustomerId: data.id,
      },
    })
  }
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const { getUser } = getKindeServerSession()
  const user = await getUser()

  if (!user) {
    redirect('/')
  }

  await getDataUser({
    email: user.email as string,
    id: user.id,
    firstName: user.given_name,
    lastName: user.family_name,
    profileImage: user.picture,
  })

  return (
    <div className="xl:min-h-screen bg-background ">
      <ModalTaskContextProvider>
        <SidebarDashboard />
        <div className="p-4 xl:ml-80">
          <>
            <HeaderDashboard />
            <div className="py-12">{children}</div>
          </>
        </div>
      </ModalTaskContextProvider>
    </div>
  )
}
